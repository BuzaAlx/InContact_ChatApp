{"version":3,"sources":["types/redux/User.ts","components/styles/AlertStyles.ts","components/styles/LayoutStyles.ts","components/styles/Messages.ts","components/styles/Message.ts","components/styles/UsersList.ts","components/Loyout.tsx","customHooks/useTypedSelector.ts","components/UsersList.tsx","types/redux/Auth.ts","redux/Users/users.actions.tsx","redux/Auth/auth.actions.ts","helpers/ReactionList.ts","customHooks/usePopover.tsx","components/Message.tsx","components/Alert.tsx","components/Messages.tsx","pages/styles/HomeStyles.ts","pages/styles/RegisterStyles.ts","pages/styles/SignInStyles.ts","pages/Home.tsx","pages/Register.tsx","pages/SignIn.tsx","ApolloProvider.tsx","helpers/DynamicRoute.tsx","redux/Auth/auth.reducer.ts","redux/Users/user.reducer.tsx","redux/rootReducer.ts","redux/createStore.ts","App.tsx","index.tsx"],"names":["userTypes","useAlertStyles","makeStyles","theme","createStyles","container","position","zIndex","bottom","useLoyoutStyles","root","background","border","borderRadius","boxShadow","color","height","padding","margin","justifyContent","alignItems","alignSelf","flexDirection","leftBlock","backgroundColor","rightBlock","header","minHeight","useMessagesStyles","display","main","flexGrow","overflowY","paddingLeft","paddingRight","breakpoints","down","width","visibility","transition","messagesHeader","logoutButton","right","footer","form","input","marginLeft","button","marginRight","messageBox","marginBottom","useMessageStyles","messageText","fontFamily","fontWeight","wordWrap","maxWidth","cursor","selfMessageText","emoji","top","palette","text","primary","fontSize","emojiRight","left","reactionsBox","flexWrap","paddingTop","reaction","transform","useUsersListStyles","userInfo","whiteSpace","textOverflow","overflow","usersMarkup","table","minWidth","chatSection","headBG","borderRight500","borderRight","latestMessageTimeBox","textAlign","onlineIcon","avatar","searchUserInput","authUser","authUserContainer","lastMessage","listItem","messageArea","usersList","background–°olor","Loyout","children","styles","Grid","className","item","useTypedSelector","useSelector","authTypes","GET_USERS","gql","mapState","state","user","authData","users","usersData","UsersList","useState","value","setValue","filteredUsers","setFilteredUsers","classes","dispatch","useDispatch","selectedUser","find","u","selected","username","loading","useQuery","onCompleted","data","getUsers","type","SET_USERS","payload","setUsers","onError","err","console","log","useEffect","newUsers","filter","startsWith","toLowerCase","Typography","variant","length","map","ListItem","onClick","SET_SELECTED_USER","ListItemIcon","Avatar","alt","src","imageUrl","ListItemText","secondary","component","latestMessage","content","moment","createdAt","format","List","Divider","xs","TextField","onChange","target","id","label","fullWidth","reactions","usePopover","anchorEl","setAnchorEl","open","Boolean","event","currentTarget","undefined","REACT_TO_MESSAGE","Message","message","image","handleClick","handleClose","sent","from","received","reactionIcons","Array","Set","r","useMutation","reactToMessage","Box","style","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","variables","uuid","onReact","align","Alert","setErrors","expiresIn","timer","setTimeout","clearTimeout","elevation","severity","SEND_MESSAGE","GET_MESSAGES","Messages","selectedChatMarkup","setContent","errors","messages","useLazyQuery","getMessages","messagesLoading","messagesData","sendMessage","SET_USER_MESSAGES","Fragment","textTransform","IconButton","LOGOUT","window","location","href","onSubmit","e","preventDefault","trim","to","Input","disableUnderline","placeholder","useHomeStyles","useRegisterStyles","paper","marginTop","spacing","textBlock","MaxWidth","title","submit","rightColumn","backgroundSize","useSignInStyles","NEW_MESSAGE","NEW_REACTION","Home","useSubscription","messageData","messageError","error","reactionData","reactionError","newMessage","otherUser","ADD_MESSAGE","newReaction","ADD_REACTION","sm","md","lg","REGISTER_USER","Register","history","email","password","confirmPassword","setVariables","update","_","__","push","graphQLErrors","extensions","registerUser","noValidate","required","name","autoComplete","helperText","autoFocus","Button","justify","LOGIN_USER","SignIn","userCredentials","login","LOGIN","loginUser","disabled","httpLink","createHttpLink","uri","setContext","headers","token","localStorage","getItem","authorization","concat","host","wsLink","WebSocketLink","options","reconnect","connectionParams","Authorization","splitLink","split","query","definition","getMainDefinition","kind","operation","client","ApolloClient","link","cache","InMemoryCache","ApolloProvider","props","DynamicRoute","authenticated","guest","currentComponent","decodedToken","jwtDecode","expiresAt","Date","exp","removeItem","INITIAL_STATE","authReducer","action","setItem","usersReducer","usersCopy","userIndex","findIndex","newUser","userCopy","messageIndex","m","messagesCopy","reactionsCopy","reactionIndex","rootReducer","combineReducers","middlewares","logger","store","createStore","applyMiddleware","darkTheme","createMuiTheme","typography","deepPurple","App","ThemeProvider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"mIAGYA,E,+ICACC,EAAiBC,aAAW,SAACC,GAAD,OACvCC,YAAa,CACXC,UAAW,CACTC,SAAU,WACVC,OAAQ,IACRC,OAAQ,SCLDC,EAAkBP,aAAW,SAACC,GAAD,OACxCC,YAAa,CACXM,KAAM,CACJC,WACE,wGACFC,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACXC,MAAO,QACPC,OAAQ,QACRC,QAAS,IACTC,OAAQ,EACRC,eAAgB,UAElBd,UAAW,CACTe,WAAY,SAEZC,UAAW,SACXC,cAAe,UAEjBC,UAAW,CACTC,gBAAiB,qBAEnBC,WAAY,GACZC,OAAQ,CACNC,UAAW,OACXH,gBAAiB,+B,QC1BVI,EAAoB1B,aAAW,SAACC,GAAD,aAC1CC,YAAa,CACXC,UAAW,CACTwB,QAAS,OACTP,cAAe,SACfN,OAAQ,QAEVc,MAAI,GACFC,SAAU,EACVT,cAAe,iBACfN,OAAQ,QACRgB,UAAW,SACXC,YAAa,OACbC,aAAc,QANZ,cAQD/B,EAAMgC,YAAYC,KAAK,MAAQ,IAR9B,cAYF,uBAAwB,CACtBC,MAAO,QAbP,cAeF,6BAA8B,CAC5Bb,gBAAiB,cACjBX,aAAc,SAjBd,cAmBF,6BAA8B,CAC5BA,aAAc,OACdyB,WAAY,UACZ3B,WAAY,uCAtBZ,cAwBF,mCAAoC,CAClC2B,WAAY,WACZC,WAAY,mBA1BZ,GA6BJC,eAAgB,CACdlC,SAAU,YAEZmC,aAAc,CACZnC,SAAU,WACVoC,MAAO,OACP3B,MAAO,qBAGT4B,OAAQ,CACN3B,OAAQ,OACRE,OAAQ,MACRL,aAAc,OACdW,gBAAiB,6BAEnBoB,KAAM,CACJf,QAAS,OACTV,eAAgB,gBAChBC,WAAY,UAEdyB,MAAO,CACL9B,MAAO,QACPsB,MAAO,MACPrB,OAAQ,OACR8B,WAAY,QAEdC,OAAQ,CACNhC,MAAO,oBACPiC,YAAa,OAEfC,WAAY,CACVhC,QAAS,OACTJ,aAAc,OACdW,gBAAiB,0BACjB0B,aAAc,aCtEPC,EAAmBjD,aAAW,SAACC,GAAD,OACzCC,YAAa,CACXgD,YAAY,aACVnC,QAAS,OACTJ,aAAc,OACdW,gBAAiB,yBACjB6B,WAAY,2BACZC,WAAY,IACZC,SAAU,aACVC,SAAU,QACVC,OAAQ,WACPtD,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BoB,SAAU,UAGdE,gBAAiB,CACflC,gBAAiB,0BAEnBmC,MAAO,CACLN,WAAY,2BACZ/C,SAAU,WACVsD,IAAK,MACLlB,MAAO,QACPlB,gBAAiB,oBACjBT,MAAOZ,EAAM0D,QAAQC,KAAKC,QAC1BlD,aAAc,OACdI,QAAS,WACT+C,SAAU,UAEZC,WAAY,CACV3D,SAAU,WACVsD,IAAK,OACLM,KAAM,QACN1C,gBAAiB,oBACjBT,MAAOZ,EAAM0D,QAAQC,KAAKC,QAC1BlD,aAAc,OACdI,QAAS,WACT+C,SAAU,UAEZG,aAAc,CACZtC,QAAS,OACTuC,SAAU,OACVZ,SAAU,QACVvC,QAAS,MACTE,eAAgB,gBAChBC,WAAY,SACZqC,OAAQ,UACRjC,gBAAiB,uBAGnByB,WAAY,CACVoB,WAAY,OACZ/D,SAAU,YAEZgE,SAAU,CACR/B,WAAY,eACZ,UAAW,CACTgC,UAAW,qBCzDNC,EAAqBtE,aAAW,SAACC,GAAD,aAC3CC,YAAa,CACXqE,SAAU,CACRjB,SAAU,QACVkB,WAAY,SACZC,aAAc,WACdC,SAAU,UAEZC,YAAa,CACX5D,QAAS,IAEX6D,MAAO,CACLC,SAAU,KAEZC,YAAa,CACX3C,MAAO,OACPrB,OAAQ,QAEViE,OAAQ,CACNzD,gBAAiB,WAEnB0D,eAAgB,CACdC,YAAa,qBAEfC,qBAAqB,aACnB/D,UAAW,aACXgE,UAAW,OACVlF,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BP,QAAS,SAGbyD,WAAY,CACVjD,MAAO,OACPrB,OAAQ,OACR0B,MAAO,OACP/B,WACE,wEACFL,SAAU,WACVO,aAAc,OAEhB0E,OAAQ,CACNjF,SAAU,WACVuB,QAAS,OACTV,eAAgB,UAElBqE,iBAAe,mBACZrF,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BP,QAAS,SAFE,wBAIJ,QAJI,GAMf4D,SAAS,eACNtF,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BP,QAAS,SAGb6D,kBAAmB,CACjB7D,QAAS,OACTV,eAAgB,UAElBwE,YAAY,eACTxF,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BP,QAAS,SAGb+D,SAAS,eACNzF,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BP,QAAS,OACTP,cAAe,WAGnBuE,YAAa,CACX7E,OAAQ,OACRgB,UAAW,QAEb8D,UAAW,CACT9E,OAAQ,QACRgB,UAAW,SACX,uBAAwB,CACtBK,MAAO,OAET,6BAA8B,CAC5Bb,gBAAiB,cACjBX,aAAc,QAEhB,6BAA8B,CAC5BA,aAAc,OACdyB,WAAY,UACZyD,uBAAiB,6BAEnB,mCAAoC,CAClCzD,WAAY,WACZC,WAAY,wBC/ELyD,EAXU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EAASzF,IACf,OACE,cAAC0F,EAAA,EAAD,CAAM9F,WAAS,EAAC+F,UAAWF,EAAOxF,KAAlC,SACE,cAACyF,EAAA,EAAD,CAAM9F,WAAS,EAACgG,MAAI,EAACD,UAAWF,EAAO7F,UAAvC,SACG4F,O,gGCPIK,EAAoDC,K,SPArDvG,K,sBAAAA,E,sCAAAA,E,sCAAAA,E,0BAAAA,E,6BAAAA,M,yRQiBZ,IClBYwG,EDkBNC,EAAYC,cAAH,KAiBTC,EAAW,SAACC,GAAD,MAAiB,CAChCC,KAAMD,EAAME,SAASD,KACrBE,MAAOH,EAAMI,UAAUD,QA4HVE,EAzHa,WAAO,IAAD,EA2B5BpC,EA3B4B,EACNqC,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,OAEUF,mBAAiB,IAF3B,mBAEzBG,EAFyB,KAEVC,EAFU,OAGRhB,EAAiBK,GAAjCE,EAHwB,EAGxBA,KAAME,EAHkB,EAGlBA,MACRQ,EAAU/C,IAEVgD,EAAWC,cAEXC,EAAY,OAAGX,QAAH,IAAGA,GAAH,UAAGA,EAAOY,MAAK,SAACC,GAAD,OAA4B,IAAfA,EAAEC,mBAA9B,aAAG,EAA+CC,SAE5DC,EAAYC,mBAAuBvB,EAAW,CACpDwB,YAAa,SAACC,GACZZ,EAAiBY,EAAKC,UACtBX,EEzCkB,SAACT,GAAD,MAAoC,CAC1DqB,KAAMpI,EAAUqI,UAChBC,QAASvB,GFuCIwB,CAASL,EAAKC,YAEzBK,QAAS,SAACC,GAAD,OAASC,QAAQC,IAAIF,MALxBV,QA8ER,OAtEAa,qBAAU,WACR,IAAIC,EACJA,EAAQ,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAO+B,QAAO,SAACjC,GACxB,OAAOA,EAAKiB,SAASiB,WAAW5B,EAAM6B,kBAGxC1B,EAAiBuB,KAChB,CAAC1B,KAGCE,GAAiBU,EACpBlD,EACE,cAACoE,EAAA,EAAD,CAAYC,QAAQ,QAAQ9C,UAAWmB,EAAQ1C,YAA/C,uBAIgC,IAAzBwC,EAAc8B,OACvBtE,EACE,cAACoE,EAAA,EAAD,CAAYC,QAAQ,QAAQ9C,UAAWmB,EAAQ1C,YAA/C,sBAIOwC,EAAc8B,OAAS,IAChCtE,EAAcwC,EAAc+B,KAAI,SAACvC,GAAU,IAAD,EAClCgB,EAAWH,IAAiBb,EAAKiB,SACvC,OACE,eAACuB,EAAA,EAAD,CACEjD,UAAWmB,EAAQ3B,SACnBxE,WAAW,SACX2B,QAAM,EAENuG,QAAS,kBAAM9B,GEjEOc,EFiEkBzB,EAAKiB,SEjEwB,CAC7EM,KAAMpI,EAAUuJ,kBAChBjB,QAASA,KAFoB,IAACA,GFkEtBT,SAAUA,EANZ,UAQE,eAAC2B,EAAA,EAAD,CAAcpD,UAAWmB,EAAQhC,OAAjC,UACE,cAACkE,EAAA,EAAD,CACEC,IAAK7C,EAAKiB,SACV6B,IACE9C,EAAK+C,UACL,8EAGJ,qBAAKxD,UAAWmB,EAAQjC,gBAE1B,cAACuE,EAAA,EAAD,CACEzD,UAAWmB,EAAQ9C,SACnBV,QAAS8C,EAAKiB,SACdgC,UACE,cAACb,EAAA,EAAD,CACE7C,UAAWmB,EAAQ5B,YACnBoE,UAAU,OACVb,QAAQ,QACRnI,MAAM,gBAJR,SAMG8F,EAAKmD,cACFnD,EAAKmD,cAAcC,QACnB,yBAKV,cAACJ,EAAA,EAAD,CACEzD,UAAWmB,EAAQnC,qBACnB0E,UAAWI,IAAM,UAACrD,EAAKmD,qBAAN,aAAC,EAAoBG,WAAWC,OAAO,cAjCrDvD,EAAKiB,cAyChB,qCACE,cAACuC,EAAA,EAAD,UACE,eAAChB,EAAA,EAAD,CAAqBjD,UAAWmB,EAAQ7B,kBAAxC,UACE,cAAC8D,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,OACJC,IAAI,0FAGR,cAACE,EAAA,EAAD,CACEzD,UAAWmB,EAAQ9B,SACnB1B,QAAS8C,EAAKiB,aATJ,UAahB,cAACwC,EAAA,EAAD,IACA,cAACnE,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAInE,UAAWmB,EAAQ/B,gBAAtC,SACE,cAACgF,EAAA,EAAD,CACErD,MAAOA,EACPsD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtD,EAASsD,EAAOvD,QAC1CwD,GAAG,uBACHC,MAAM,SACN1B,QAAQ,WACR2B,WAAS,MAGb,cAACP,EAAA,EAAD,IACA,cAACD,EAAA,EAAD,CAAMjE,UAAWmB,EAAQzB,UAAzB,SAAqCjB,Q,qCC5J/B2B,K,cAAAA,E,iBAAAA,M,KEEL,I,6CCJMsE,EAAY,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBCG7D,SAASC,IAAc,IAAD,EACK7D,mBAAqB,MAD1B,mBACpB8D,EADoB,KACVC,EADU,KAQrBC,EAAOC,QAAQH,GAGrB,MAAO,CAACA,EAAUC,EATE,SAACG,GACnBH,EAAYG,EAAMC,gBAEA,WAClBJ,EAAY,OAK2CC,EAF9CA,EAAO,sBAAmBI,G,uNCDvC,IAAM3E,GAAW,SAACC,GAAD,MAAiB,CAChCC,KAAMD,EAAME,SAASD,OAGjB0E,GAAmB7E,cAAH,MAwGP8E,GA3F6B,SAAC,GAAwB,IAAD,MAArBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC9C7E,EAASP,EAAiBK,IAA1BE,KACFX,EAAS/C,IAFmD,EAW9D4H,IAX8D,mBAKhEC,EALgE,KAMhEC,EANgE,KAOhEU,EAPgE,KAQhEC,EARgE,KAShEV,EATgE,KAUhEP,EAVgE,KAa5DkB,EAAOJ,EAAQK,OAASjF,EAAKiB,SAC7BiE,GAAYF,EACZG,EAAgBC,MAAMH,KAC1B,IAAII,IAAJ,OAAQT,QAAR,IAAQA,GAAR,UAAQA,EAASX,iBAAjB,aAAQ,EAAoB1B,KAAI,SAAC+C,GAAD,OAAOA,EAAElC,aAhBuB,EAmBzCmC,sBAAYb,GAAkB,CACrD/C,QAAS,SAACC,GAAD,OAASC,QAAQC,IAAIF,IAC9BR,YAAa,kBAAMgD,GAAY,MAF1BoB,EAnB2D,oBA4BlE,OACE,eAACC,EAAA,EAAD,CAAKjL,UAAW0K,EAAW,aAAe,WAAYlK,QAAQ,OAA9D,UACGkK,GACC,cAACtC,EAAA,EAAD,CACE8C,MAAO,CAAEvJ,YAAa,OACtB0G,IAAK+B,EAAQK,KACbnC,IAAK+B,GAAgB,MAGzB,eAACY,EAAA,EAAD,CAAKlG,UAAWF,EAAOjD,WAAvB,UACE,cAACqJ,EAAA,EAAD,CACElG,UAAS,UAAKF,EAAO9C,YAAZ,YACPyI,EAAO3F,EAAOxC,gBAAkB,MAElC4F,QAASqC,EAJX,SAMGF,EAAQxB,UAEX,cAACuC,EAAA,EAAD,CACE7B,GAAIA,EACJO,KAAMA,EACNF,SAAUA,EACVyB,QAASb,EACTc,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAXhB,SAcE,cAACN,EAAA,EAAD,CAAKlG,UAAWF,EAAO/B,aAAvB,SACG2G,EAAU1B,KAAI,SAAC9E,GAAD,OACb,mBAEE8B,UAAWF,EAAO5B,SAClBgF,QAAS,kBAzCP,SAAChF,GACf+H,EAAe,CAAES,UAAW,CAAEC,KAAMtB,EAAQsB,KAAM9C,QAAS3F,KAwChC0I,CAAQ1I,IAHzB,SAKGA,GAJIA,UAUb,cAAC2E,EAAA,EAAD,CACEC,QAAQ,QACRnI,MAAM,gBACNkM,MAAOlB,EAAW,QAAU,OAH9B,SAKG7B,IAAOuB,EAAQtB,WAAWC,OAAO,qBAGJ,KAAxB,OAAPqB,QAAO,IAAPA,GAAA,UAAAA,EAASX,iBAAT,eAAoB3B,SACnB,eAACmD,EAAA,EAAD,CAAKlG,UAAW2F,EAAW7F,EAAOvC,MAAQuC,EAAOjC,WAAjD,UACG+H,EADH,WACmBP,QADnB,IACmBA,GADnB,UACmBA,EAASX,iBAD5B,aACmB,EAAoB3B,iB,UCpFlC+D,OAtBf,YAAwD,IAAvCzB,EAAsC,EAAtCA,QAAS0B,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,UAC7BlH,EAASjG,IAYf,OAVA2I,qBAAU,WACR,IAAMyE,EAAQC,YAAW,WACvBH,EAAU,MACTC,GAEH,OAAO,WACLG,aAAaF,MAEd,CAAC5B,IAGF,cAACa,EAAA,EAAD,CAAKlG,UAAWF,EAAO7F,UAAvB,SACE,cAAC,KAAD,CAAUmN,UAAW,EAAGtE,QAAQ,SAASuE,SAAS,UAAlD,SACGhC,O,0hBCQT,IAAM9E,GAAW,SAACC,GAAD,MAAiB,CAChCG,MAAOH,EAAMI,UAAUD,QAGnB2G,GAAehH,cAAH,MAYZiH,GAAejH,cAAH,MAiJHkH,OA7Hf,WACE,IAkDIC,EAlDErG,EAAWC,cADC,EAEYP,mBAAS,IAFrB,mBAEX+C,EAFW,KAEF6D,EAFE,OAGU5G,qBAHV,mBAGX6G,EAHW,KAGHZ,EAHG,KAIZjH,EAAStE,IAEPmF,EAAUT,EAA6BK,IAAvCI,MAOFW,EAAY,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAOY,MAAK,SAACC,GAAD,OAA4B,IAAfA,EAAEC,YAC1CmG,EAAQ,OAAGtG,QAAH,IAAGA,OAAH,EAAGA,EAAcsG,SAdb,EAmBdC,uBAAaN,IAnBC,mBAiBhBO,EAjBgB,YAkBLC,EAlBK,EAkBdpG,QAAgCqG,EAlBlB,EAkBYlG,KAlBZ,EAqBIkE,sBAAYsB,GAAc,CAC9ClF,QAAS,SAACC,GAAD,OAAS0E,EAAU1E,MADvB4F,EArBW,oBAwElB,OA/CAzF,qBAAU,WACJlB,IAAiBA,EAAasG,UAChCE,EAAY,CAAEpB,UAAW,CAAEhB,KAAMpE,EAAaI,cAE/C,CAACJ,IAEJkB,qBAAU,WN7EmB,IAC7BN,EM6EM8F,GACF5G,GN9EJc,EM+EsB,CACdR,SAAQ,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAcI,SACxBkG,SAAUI,EAAaF,aNhFD,CAC9B9F,KAAMpI,EAAUsO,kBAChBhG,QAASA,OMkFN,CAAC8F,IAYCJ,GAAaG,EAIPA,EACTN,EAAqB,cAAC5E,EAAA,EAAD,CAAYC,QAAQ,WAApB,uBACS,KAAb,OAAR8E,QAAQ,IAARA,OAAA,EAAAA,EAAU7E,QACnB0E,EAAkB,OAAGG,QAAH,IAAGA,OAAH,EAAGA,EAAU5E,KAAI,SAACqC,GAAD,OACjC,cAAC,IAAM8C,SAAP,UACE,cAAC,GAAD,CAAS7C,MAAK,OAAEhE,QAAF,IAAEA,OAAF,EAAEA,EAAckC,SAAU6B,QAASA,KAD9BA,EAAQsB,SAID,KAAb,OAARiB,QAAQ,IAARA,OAAA,EAAAA,EAAU7E,UACnB0E,EACE,cAAC5E,EAAA,EAAD,CAAYC,QAAQ,WAApB,8DAbF2E,EACE,cAAC5E,EAAA,EAAD,CAAYC,QAAQ,WAApB,6BAmBF,eAACoD,EAAA,EAAD,CAAKlG,UAAWF,EAAO7F,UAAvB,UACE,eAACiM,EAAA,EAAD,WACE,cAACjC,EAAA,EAAD,UACE,eAAChB,EAAA,EAAD,CAA0BjD,UAAWF,EAAO1D,eAA5C,UACE,cAACgH,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,IAAI,OACJC,IAAKjC,EAAeA,EAAakC,SAAW,OAGhD,cAACC,EAAA,EAAD,CACE0C,MAAO,CAAEiC,cAAe,aACxBzK,QAAS2D,EAAeA,EAAaI,SAAW,KAElD,cAAC+B,EAAA,EAAD,CAAczD,UAAWF,EAAOzD,aAAhC,SACE,cAACgM,EAAA,EAAD,CAAYnF,QAhFH,WACnB9B,ELjE0C,CAC5CY,KAAM5B,EAAUkI,SKiEdC,OAAOC,SAASC,KAAO,UA8Eb,SACE,cAAC,IAAD,UAbQ,eAkBhB,cAACvE,EAAA,EAAD,OAEF,cAACgC,EAAA,EAAD,CAAKlG,UAAWF,EAAOpE,KAAMD,QAAQ,OAAOP,cAAc,SAA1D,SACGuM,IAEH,eAACvB,EAAA,EAAD,CAAKlG,UAAWF,EAAOvD,OAAvB,UACGoL,GACC,cAAC,GAAD,CACEtC,QAASsC,EAAOtC,QAChB0B,UAAWA,EACXC,UAAU,SAGd,uBAAM0B,SAjEU,SAACC,GACrBA,EAAEC,iBAEqB,KAAnB/E,EAAQgF,QAAkBvH,IAC1BuC,EAAQd,QACVkF,EAAY,CAAEvB,UAAW,CAAEoC,GAAIxH,EAAaI,SAAUmC,aACxD6D,EAAW,MA2DwB1H,UAAWF,EAAOtD,KAAjD,UACE,cAACuM,EAAA,EAAD,CACEC,kBAAgB,EAChBhH,KAAK,OACLiH,YAAY,oBACZjJ,UAAWF,EAAOrD,MAClBsE,MAAO8C,EACPQ,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBoD,EAAWpD,EAAOvD,UAE9C,cAACsH,EAAA,EAAD,CAAYrG,KAAK,SAAShC,UAAWF,EAAOnD,OAA5C,SACE,cAAC,IAAD,gBCnLCuM,GAAgBpP,aAAW,SAACC,GAAD,OACtCC,YAAa,CACXqB,WAAY,GACZwI,QAAQ,aACN3J,SAAU,WACVC,OAAQ,EACRM,aAAc,OACdM,eAAgB,eAChBR,WACE,iHACDR,EAAMgC,YAAYC,KAAK,MAAQ,SCVzBmN,GAAoBrP,aAAW,SAACC,GAAD,OAC1CC,YAAa,CACXM,KAAM,CACJmB,QAAS,OACTlB,WACE,iHAEJ6O,MAAO,CACLC,UAAWtP,EAAMuP,QAAQ,GACzB7N,QAAS,OACTP,cAAe,SACfF,WAAY,SACZH,QAAS,QAEX0O,UAAW,CACTrP,SAAU,WACVC,OAAQ,GACRqP,SAAU,QACV3O,QAAS,OACTI,UAAW,SACXyB,WAAY,OACZ2M,UAAW,QAEbI,MAAO,CACLxM,WAAY,gCAEdkC,OAAQ,CACNrE,OAAQf,EAAMuP,QAAQ,GACtBlO,gBAAiBrB,EAAM0D,QAAQiG,UAAUhI,MAE3Cc,KAAM,CACJP,MAAO,OACPoN,UAAWtP,EAAMuP,QAAQ,IAE3BI,OAAQ,CACN5O,OAAQf,EAAMuP,QAAQ,EAAG,EAAG,IAE9BK,YAAY,aACVpP,WAAY,yCACZqP,eAAgB,UAChB1P,SAAU,WACV,WAAY,CACVA,SAAU,WACV2J,QAAS,KACT5H,MAAO,OACPrB,OAAQ,OACR4C,IAAK,IACLM,KAAM,IACNvD,WACE,8EAEHR,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BP,QAAS,cCpDJoO,GAAkB/P,aAAW,SAACC,GAAD,OACxCC,YAAa,CACXM,KAAM,CACJmB,QAAS,OACTb,OAAQ,QACRL,WACE,iHAEJ6O,MAAO,CACLC,UAAWtP,EAAMuP,QAAQ,GACzB7N,QAAS,OACTP,cAAe,SACfF,WAAY,SACZH,QAAS,QAEX0O,UAAW,CACTrP,SAAU,WACVC,OAAQ,GACRqP,SAAU,QACV3O,QAAS,OACTI,UAAW,SACXyB,WAAY,OACZ2M,UAAW,QAEbI,MAAO,CACLxM,WAAY,gCAEdkC,OAAQ,CACNrE,OAAQf,EAAMuP,QAAQ,GACtBlO,gBAAiBrB,EAAM0D,QAAQiG,UAAUhI,MAE3Cc,KAAM,CACJP,MAAO,OACPoN,UAAWtP,EAAMuP,QAAQ,IAE3BI,OAAQ,CACN5O,OAAQf,EAAMuP,QAAQ,EAAG,EAAG,IAE9BK,YAAY,aACVpP,WAAY,uCACZqP,eAAgB,UAChB1P,SAAU,WACV,WAAY,CACVA,SAAU,WACV2J,QAAS,KACT5H,MAAO,OACPrB,OAAQ,OACR4C,IAAK,IACLM,KAAM,IACNvD,WACE,8EAEHR,EAAMgC,YAAYC,KAAK,MAAQ,CAC9BP,QAAS,c,yaC1CjB,IAAMqO,GAAcxJ,cAAH,MAYXyJ,GAAezJ,cAAH,MAcZC,GAAW,SAACC,GAAD,MAAiB,CAAEC,KAAMD,EAAME,SAASD,OA0D1CuJ,GAxDQ,WACrB,IAAM5I,EAAWC,cACXvB,EAASoJ,KACPzI,EAASP,EAAiBK,IAA1BE,KAHmB,EAQvBwJ,0BAA4BH,IAFxBI,EANmB,EAMzBpI,KACOqI,EAPkB,EAOzBC,MAPyB,EAavBH,0BAA6BF,IAFzBM,EAXmB,EAWzBvI,KACOwI,EAZkB,EAYzBF,MA8BF,OA3BA5H,qBAAU,WAGR,GAFI2H,GAAc7H,QAAQC,IAAI4H,GAE1BD,EAAa,CACf,IAAM7E,EAAU6E,EAAYK,WAC5BjI,QAAQC,IAAI8C,GACZ,IAAMmF,EACJ/J,EAAKiB,WAAa2D,EAAQyD,GAAKzD,EAAQK,KAAOL,EAAQyD,GAExD1H,GVlCJc,EUkCwB,CAAER,SAAU8I,EAAWnF,WVjCtB,CACzBrD,KAAMpI,EAAU6Q,YAChBvI,QAASA,KAJe,IACxBA,IUoCG,CAACiI,EAAcD,IAElB1H,qBAAU,WAGR,GAFI8H,GAAehI,QAAQC,IAAI+H,GAE3BD,EAAc,CAChB,IAAMnM,EAAWmM,EAAaK,YACxBF,EACJ/J,EAAKiB,WAAaxD,EAASmH,QAAQyD,GAC/B5K,EAASmH,QAAQK,KACjBxH,EAASmH,QAAQyD,GAEvB1H,GVzCJc,EUyCyB,CAAER,SAAU8I,EAAWtM,YVxCtB,CAC1B8D,KAAMpI,EAAU+Q,aAChBzI,QAASA,KAJgB,IACzBA,IU2CG,CAACoI,EAAeD,IAGjB,cAAC,EAAD,UACE,eAACtK,EAAA,EAAD,CAAMC,UAAWF,EAAO+D,QAAS5J,WAAS,EAACgG,MAAI,EAAC2K,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAApE,UACE,cAAC/K,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,EAAGyG,GAAI,EAAGC,GAAI,EAA7B,SACE,cAAC,EAAD,MAEF,cAAC9K,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,EAAGnE,UAAWF,EAAOzE,WAApC,SACE,cAAC,GAAD,Y,maCnFV,IAAM0P,GAAgBzK,cAAH,MA+JJ0K,GA3IiC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3C9J,EAAUgI,KAD+C,EAE7BrI,mBAAS,CACzCoK,MAAO,GACPxJ,SAAU,GACVyJ,SAAU,GACVC,gBAAiB,KAN4C,mBAExD1E,EAFwD,KAE7C2E,EAF6C,OAQnCvK,mBAAqB,IARc,mBAQxD6G,EARwD,KAQhDZ,EARgD,OAUxCf,sBAA6B+E,GAAe,CACjEO,OAAQ,SAACC,EAAGC,GAAJ,OAAWP,EAAQQ,KAAK,WAChCrJ,QAAS,SAACC,GAAD,OACP0E,EAAU1E,EAAIqJ,cAAc,GAAGC,WAAWhE,WAHvCiE,EAVwD,oBAsB/D,OACE,cAAC,EAAD,UACE,eAAC7L,EAAA,EAAD,CAAMoE,GAAI,GAAI0G,GAAI,EAAG7K,UAAWmB,EAAQ7G,KAAxC,UACE,cAACyF,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAIyG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,sBAAK9K,UAAWmB,EAAQiI,MAAxB,UACE,cAACvG,EAAA,EAAD,CAAYc,UAAU,KAAKb,QAAQ,KAAnC,qBAGA,uBACE9C,UAAWmB,EAAQ3E,KACnBqP,YAAU,EACVnD,SAjBe,SAACC,GAC1BA,EAAEC,iBAEFgD,EAAa,CAAElF,eAWP,UAKE,eAAC3G,EAAA,EAAD,CAAM9F,WAAS,EAACqP,QAAS,EAAzB,UACE,cAACvJ,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEtB,QAAQ,WACRgJ,UAAQ,EACRrH,WAAS,EACTF,GAAG,QACHC,MAAM,gBACNuH,KAAK,QACLC,aAAa,QACbjL,MAAO2F,EAAUwE,MACjB7G,SAAU,SAACsE,GAAD,OACR0C,EAAa,6BAAK3E,GAAN,IAAiBwE,MAAOvC,EAAErE,OAAOvD,UAE/CqJ,MAAOzC,EAAOuD,MACde,WAAYtE,EAAOuD,UAGvB,cAACnL,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEtB,QAAQ,WACRgJ,UAAQ,EACRrH,WAAS,EACTsH,KAAK,WACLvH,MAAM,WACND,GAAG,WACHxD,MAAO2F,EAAUhF,SACjB2C,SAAU,SAACsE,GAAD,OACR0C,EAAa,6BAAK3E,GAAN,IAAiBhF,SAAUiH,EAAErE,OAAOvD,cAItD,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACE4H,aAAa,QACbD,KAAK,WACLjJ,QAAQ,WACRgJ,UAAQ,EACRrH,WAAS,EACTF,GAAG,WACHvC,KAAK,WACLwC,MAAM,WACN0H,WAAS,EACTnL,MAAO2F,EAAUyE,SACjB9G,SAAU,SAACsE,GAAD,OACR0C,EAAa,6BAAK3E,GAAN,IAAiByE,SAAUxC,EAAErE,OAAOvD,cAItD,cAAChB,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEtB,QAAQ,WACRgJ,UAAQ,EACRrH,WAAS,EACTF,GAAG,kBACHC,MAAM,mBACNxC,KAAK,WACL+J,KAAK,kBACLhL,MAAO2F,EAAU0E,gBACjB/G,SAAU,SAACsE,GAAD,OACR0C,EAAa,6BACR3E,GADO,IAEV0E,gBAAiBzC,EAAErE,OAAOvD,UAG9BqJ,MAAOzC,EAAOyD,gBACda,WAAYtE,EAAOyD,uBAIzB,cAACe,GAAA,EAAD,CACEnK,KAAK,SACLyC,WAAS,EACT3B,QAAQ,YACRnI,MAAM,UACNqF,UAAWmB,EAAQuI,OALrB,qBASA,cAAC3J,EAAA,EAAD,CAAM9F,WAAS,EAACmS,QAAQ,SAAxB,SACE,cAACrM,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CAAM6I,GAAG,UAAUnO,MAAM,QAAzB,SACE,cAACkI,EAAA,EAAD,CAAYC,QAAQ,WAAWnI,MAAM,gBAArC,4DASZ,cAACoF,EAAA,EAAD,CAAM9F,WAAS,EAACgG,MAAI,EAACkE,GAAI,EAAGnE,UAAWmB,EAAQwI,YAA/C,SACE,eAAC5J,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWmB,EAAQoI,UAA9B,UACE,cAAC1G,EAAA,EAAD,CAAYC,QAAQ,KAAK9C,UAAWmB,EAAQsI,MAA5C,iCAGA,cAAC5G,EAAA,EAAD,qE,gQCrJZ,IAAMwJ,GAAa/L,cAAH,MA4HDgM,GAjHU,WACvB,IAAMlL,EAAWC,cADY,EAEDP,mBAA4B,IAF3B,mBAEtB6G,EAFsB,KAEdZ,EAFc,OAGKjG,mBAAS,CACzCY,SAAU,GACVyJ,SAAU,KALiB,mBAGtBzE,EAHsB,KAGX2E,EAHW,KAQvBlK,EAAU0I,KARa,EAUIhC,uBAC/BwE,GACA,CACEjK,QAAS,SAACC,GAAD,OACP0E,EAAU1E,EAAIqJ,cAAc,GAAGC,WAAWhE,SAE5C9F,YAJF,SAIcC,GXjCG,IAACyK,EWkCdnL,GXlCcmL,EWkCCzK,EAAK0K,MXlCsC,CAChExK,KAAM5B,EAAUqM,MAChBvK,QAASqK,QWeoB,mBAUtBG,EAVsB,KAUT/K,EAVS,KAUTA,QAiBpB,OACE,cAAC,EAAD,UACE,eAAC5B,EAAA,EAAD,CAAMoE,GAAI,GAAInE,UAAWmB,EAAQ7G,KAAjC,UACE,cAACyF,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAIyG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,sBAAK9K,UAAWmB,EAAQiI,MAAxB,UACE,cAACvG,EAAA,EAAD,CAAYc,UAAU,KAAKb,QAAQ,KAAnC,qBAGA,uBACE9C,UAAWmB,EAAQ3E,KACnBqP,YAAU,EACVnD,SAhBY,SAACC,GACvBA,EAAEC,iBACF8D,EAAU,CAAEhG,eAWJ,UAKE,eAAC3G,EAAA,EAAD,CAAM9F,WAAS,EAACqP,QAAS,EAAzB,UACE,cAACvJ,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEtB,QAAQ,WACRgJ,UAAQ,EACRrH,WAAS,EACTF,GAAG,QACHC,MAAM,WACNuH,KAAK,WACLhL,MAAO2F,EAAUhF,SACjB2C,SAAU,SAACsE,GAAD,OACR0C,EAAa,6BAAK3E,GAAN,IAAiBhF,SAAUiH,EAAErE,OAAOvD,UAElDqJ,QAASzC,EAAOjG,SAChBuK,WAAYtE,EAAOjG,UAAYiG,EAAOjG,aAG1C,cAAC3B,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEtB,QAAQ,WACRgJ,UAAQ,EACRrH,WAAS,EACTsH,KAAK,WACLvH,MAAM,WACNxC,KAAK,WACLuC,GAAG,WACHxD,MAAO2F,EAAUyE,SACjB9G,SAAU,SAACsE,GAAD,OACR0C,EAAa,6BAAK3E,GAAN,IAAiByE,SAAUxC,EAAErE,OAAOvD,UAElDqJ,QAASzC,EAAOwD,SAChBc,WAAYtE,EAAOwD,UAAYxD,EAAOwD,aAG1C,cAACpL,EAAA,EAAD,CAAME,MAAI,EAACkE,GAAI,QAEjB,cAACgI,GAAA,EAAD,CACEnK,KAAK,SACLyC,WAAS,EACT3B,QAAQ,YACRnI,MAAM,UACNqF,UAAWmB,EAAQuI,OACnBiD,SAAUhL,EANZ,SAQGA,EAAU,YAAc,YAE3B,cAAC5B,EAAA,EAAD,CAAM9F,WAAS,EAACmS,QAAQ,SAAxB,SACE,cAACrM,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC,IAAD,CAAM6I,GAAG,aAAT,SACE,cAACjG,EAAA,EAAD,CAAYC,QAAQ,WAAWnI,MAAM,gBAArC,0DASZ,cAACoF,EAAA,EAAD,CAAM9F,WAAS,EAACgG,MAAI,EAACkE,GAAI,EAAGnE,UAAWmB,EAAQwI,YAA/C,SACE,eAAC5J,EAAA,EAAD,CAAME,MAAI,EAACD,UAAWmB,EAAQoI,UAA9B,UACE,cAAC1G,EAAA,EAAD,CAAYC,QAAQ,KAAK9C,UAAWmB,EAAQsI,MAA5C,kCAGA,cAAC5G,EAAA,EAAD,CAAYC,QAAQ,YAApB,oE,4BChHR8J,GAAWC,yBAAe,CAC5BC,IAAK,aAaPF,GAViBG,cAAW,SAACxB,EAAD,GAAqB,IAAfyB,EAAc,EAAdA,QAC1BC,EAAQC,aAAaC,QAAQ,SACnC,MAAO,CACLH,QAAQ,6BACHA,GADE,IAELI,cAAeH,EAAK,iBAAaA,GAAU,SAK7BI,OAAOT,IAE3B,IAAMU,GAAO/E,OAAOC,SAAS8E,KAEvBC,GAAS,IAAIC,KAAc,CAC/BV,IAAI,QAAD,OAAUQ,GAAV,aACHG,QAAS,CACPC,WAAW,EACXC,iBAAkB,CAChBC,cAAc,UAAD,OAAYV,aAAaC,QAAQ,cAK9CU,GAAYC,iBAChB,YAAgB,IAAbC,EAAY,EAAZA,MACKC,EAAaC,aAAkBF,GACrC,MACsB,wBAApBC,EAAWE,MACc,iBAAzBF,EAAWG,YAGfZ,GACAX,IAGIwB,GAAS,IAAIC,eAAa,CAC9BC,KAAMT,GACNU,MAAO,IAAIC,kBAGE,SAASC,GAAeC,GACrC,OAAO,cAAC,iBAAD,cAAUN,OAAQA,IAAYM,ICtDvC,IAAMnO,GAAW,SAACC,GAAD,MAAiB,CAChCC,KAAMD,EAAME,SAASD,OAuBRkO,GAZuB,SAACD,GAAW,IACxCjO,EAASP,EAAiBK,IAA1BE,KAER,OAAIiO,EAAME,gBAAkBnO,EACnB,cAAC,IAAD,CAAUqI,GAAG,WACX4F,EAAMG,OAASpO,EACjB,cAAC,IAAD,CAAUqI,GAAG,MAEb,cAAC,IAAD,cAAOnF,UAAW+K,EAAMI,kBAAsBJ,K,wCCdrDjO,GAAuB,KACrBwM,GAAQC,aAAaC,QAAQ,SACnC,GAAIF,GAAO,CACT,IAAM8B,GAAeC,aAAmB/B,IAClCgC,GAAY,IAAIC,KAAwB,IAAnBH,GAAaI,KAEpC,IAAID,KAASD,GACf/B,aAAakC,WAAW,SAExB3O,GAAOsO,QAEJzM,QAAQC,IAAI,kBAEnB,IAAM8M,GAAgB,CACpB5O,SAsBa6O,GAnBK,WAAiD,IAAhD9O,EAA+C,uDAAvC6O,GAAeE,EAAwB,uCAClE,OAAQA,EAAOvN,MACb,KAAK5B,EAAUqM,MAEb,OADAS,aAAasC,QAAQ,QAASD,EAAOrN,QAAQ+K,OACtC,6BACFzM,GADL,IAEEC,KAAM8O,EAAOrN,UAEjB,KAAK9B,EAAUkI,OAEb,OADA4E,aAAakC,WAAW,SACjB,6BACF5O,GADL,IAEEC,KAAM,OAEV,QACE,OAAOD,I,SCtCP6O,GAA4B,CAChC1O,MAAO,IAqHM8O,GAlHM,WAGH,IACZC,EAAWC,EAHfnP,EAEe,uDAFP6O,GACRE,EACe,uCAGf,OAAQA,EAAOvN,MACb,KAAKpI,EAAUqI,UACb,OAAO,6BACFzB,GADL,IAEEG,MAAO4O,EAAOrN,UAGlB,KAAKtI,EAAUsO,kBAAf,MACiCqH,EAAOrN,QAA9BR,EADV,EACUA,SAAUkG,EADpB,EACoBA,SAQlB,OAJA+H,GAFAD,EAAS,aAAOlP,EAAMG,QAEAiP,WAAU,SAACpO,GAAD,OAAOA,EAAEE,WAAaA,KAEtDgO,EAAUC,GAAV,6BAA4BD,EAAUC,IAAtC,IAAkD/H,aAE3C,6BACFpH,GADL,IAEEG,MAAO+O,IAGX,KAAK9V,EAAUuJ,kBAQb,OALAuM,GAFAA,EAAS,aAAOlP,EAAMG,QAEAqC,KAAI,SAACvC,GAAD,oBAAC,gBACtBA,GADqB,IAExBgB,SAAUhB,EAAKiB,WAAa6N,EAAOrN,aAG9B,6BACF1B,GADL,IAEEG,MAAO+O,IAGX,KAAK9V,EAAU6Q,YAAf,IACQpF,EAAYkK,EAAOrN,QAAnBmD,QAINsK,GAFAD,EAAS,aAAOlP,EAAMG,QAEAiP,WACpB,SAACpO,GAAD,OAAOA,EAAEE,WAAa6N,EAAOrN,QAAQR,YAGvC2D,EAAQX,UAAY,GACpB,IAAMmL,EAAO,6BACRH,EAAUC,IADF,IAEX/H,SAAU8H,EAAUC,GAAW/H,SAArB,CACLvC,GADK,oBACOqK,EAAUC,GAAW/H,WAClC,KACJhE,cAAeyB,IAKjB,OAFAqK,EAAUC,GAAaE,EAEhB,6BACFrP,GADL,IAEEG,MAAO+O,IAGX,KAAK9V,EAAU+Q,aAAf,IACQzM,EAAaqR,EAAOrN,QAApBhE,SAGNyR,GAFAD,EAAS,aAAOlP,EAAMG,QAEAiP,WACpB,SAACpO,GAAD,OAAOA,EAAEE,WAAa6N,EAAOrN,QAAQR,YAGvC,IAAIoO,EAAQ,gBAAQJ,EAAUC,IAE1BI,EAAeD,EAASlI,SAASgI,WACnC,SAACI,GAAD,OAAYA,EAAErJ,OAASzI,EAASmH,QAAQsB,QAG1C,GAAIoJ,GAAgB,EAAG,CACrB,IAAIE,EAAY,aAAOH,EAASlI,UAE5BsI,EAAa,aAAOD,EAAaF,GAAcrL,WAE/CyL,EAAgBD,EAAcN,WAChC,SAAC7J,GAAD,OAAOA,EAAEY,OAASzI,EAASyI,QAgB7B,OAdIwJ,GAAiB,EACnBD,EAAcC,GAAiBjS,EAE/BgS,EAAa,uBAAOA,GAAP,CAAsBhS,IAGrC+R,EAAaF,GAAb,6BACKE,EAAaF,IADlB,IAEErL,UAAWwL,IAGbJ,EAAQ,6BAAQA,GAAR,IAAkBlI,SAAUqI,IACpCP,EAAUC,GAAaG,EAEhB,6BACFtP,GADL,IAEEG,MAAO+O,IAGT,OAAOlP,EAGX,QACE,OAAOA,IC3GE4P,GAPKC,aAAgB,CAClC3P,SAAU4O,GACV1O,UAAW6O,KCFPa,GAAc,CAACC,MAINC,GAFMC,aAAYL,GAAaM,KAAe,WAAf,EAAmBJ,KCQ3DK,GAAYC,YAAe,CAC/BC,WAAY,CACV5T,WAAY,gCAEdQ,QAAS,CACPuE,KAAM,OACNrE,QAAS,CACPjC,KAAMoV,IAAW,SAkCRC,GA7BO,WACpB,OACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC/B,GAAD,UACE,cAAC,IAAD,UACE,cAACuC,EAAA,EAAD,CAAejX,MAAO4W,GAAtB,SACE,qBAAK3Q,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,GAAD,CACEiR,OAAK,EACLC,KAAK,IACLpC,iBAAkB9E,GAClB4E,eAAa,IAEf,cAAC,GAAD,CACEsC,KAAK,YACLpC,iBAAkB9D,GAClB6D,OAAK,IAEP,cAAC,GAAD,CAAcqC,KAAK,SAASpC,iBAAkBxC,GAAQuC,OAAK,kBCxC3EsC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8fb062e6.chunk.js","sourcesContent":["import { Message, Reaction } from \"../Pages/Home\";\r\nimport { User } from \"../components/UsersList\";\r\n\r\nexport enum userTypes {\r\n  SET_USERS = \"SET_USERS\",\r\n  SET_USER_MESSAGES = \"SET_USER_MESSAGES\",\r\n  SET_SELECTED_USER = \"SET_SELECTED_USER\",\r\n  ADD_MESSAGE = \"ADD_MESSAGE\",\r\n  ADD_REACTION = \"ADD_REACTION\",\r\n}\r\n\r\nexport interface UsersState {\r\n  users: User[] | any;\r\n}\r\n\r\nexport interface setUserMessagesPayload {\r\n  username: string | undefined;\r\n  messages: any[];\r\n}\r\nexport interface addMessagePayload {\r\n  username: string;\r\n  message: Message;\r\n}\r\nexport interface addReactionPayload {\r\n  username: string;\r\n  reaction: Reaction;\r\n}\r\n\r\nexport interface setUsersInterface {\r\n  type: userTypes.SET_USERS;\r\n  payload: UsersState;\r\n}\r\n\r\nexport interface setUserMessagesInterface {\r\n  type: userTypes.SET_USER_MESSAGES;\r\n  payload: setUserMessagesPayload;\r\n}\r\n\r\nexport interface setSelectedUserInterface {\r\n  type: userTypes.SET_SELECTED_USER;\r\n  payload: string;\r\n}\r\n\r\nexport interface addMessageInterface {\r\n  type: userTypes.ADD_MESSAGE;\r\n  payload: addMessagePayload;\r\n}\r\n\r\nexport interface addReactionInterface {\r\n  type: userTypes.ADD_REACTION;\r\n  payload: addReactionPayload;\r\n}\r\n\r\nexport type UserActions =\r\n  | setUsersInterface\r\n  | setUserMessagesInterface\r\n  | setSelectedUserInterface\r\n  | addMessageInterface\r\n  | addReactionInterface;\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useAlertStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      position: \"absolute\",\r\n      zIndex: 100,\r\n      bottom: 60,\r\n    },\r\n  })\r\n);\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useLoyoutStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(0,0,0,1) 0%, rgba(121,9,117,0.40379901960784315) 85%);\",\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n      color: \"white\",\r\n      height: \"100vh\",\r\n      padding: \"0\",\r\n      margin: 0,\r\n      justifyContent: \"center\",\r\n    },\r\n    container: {\r\n      alignItems: \"center\",\r\n\r\n      alignSelf: \"center\",\r\n      flexDirection: \"column\",\r\n    },\r\n    leftBlock: {\r\n      backgroundColor: \"rgba(2,0,36,0.4);\",\r\n    },\r\n    rightBlock: {},\r\n    header: {\r\n      minHeight: \"50px\",\r\n      backgroundColor: \"rgba(217, 20, 20, 0.4)\",\r\n    },\r\n  })\r\n);\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useMessagesStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      height: \"100%\",\r\n    },\r\n    main: {\r\n      flexGrow: 1,\r\n      flexDirection: \"column-reverse\",\r\n      height: \"430px\",\r\n      overflowY: \"scroll\",\r\n      paddingLeft: \"10px\",\r\n      paddingRight: \"10px\",\r\n\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        // maxHeight: \"630px\",\r\n      },\r\n\r\n      \"&::-webkit-scrollbar\": {\r\n        width: \"5px\",\r\n      },\r\n      \"&::-webkit-scrollbar-track\": {\r\n        backgroundColor: \"transparent\",\r\n        borderRadius: \"10px\",\r\n      },\r\n      \"&::-webkit-scrollbar-thumb\": {\r\n        borderRadius: \"10px\",\r\n        visibility: \"hidden;\",\r\n        background: \"linear-gradient(#e66465, #9198e5);\",\r\n      },\r\n      \"&:hover::-webkit-scrollbar-thumb\": {\r\n        visibility: \"visible;\",\r\n        transition: \"all 0.2s ease;\",\r\n      },\r\n    },\r\n    messagesHeader: {\r\n      position: \"relative\",\r\n    },\r\n    logoutButton: {\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      color: \"rgba(2,0,36,0.4);\",\r\n    },\r\n\r\n    footer: {\r\n      height: \"50px\",\r\n      margin: \"5px\",\r\n      borderRadius: \"20px\",\r\n      backgroundColor: \"rgba(255, 255, 255, 0.5);\",\r\n    },\r\n    form: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    input: {\r\n      color: \"black\",\r\n      width: \"80%\",\r\n      height: \"100%\",\r\n      marginLeft: \"10px\",\r\n    },\r\n    button: {\r\n      color: \"rgba(2,0,36,0.4);\",\r\n      marginRight: \"5px\",\r\n    },\r\n    messageBox: {\r\n      padding: \"10px\",\r\n      borderRadius: \"15px\",\r\n      backgroundColor: \"rgba(28, 21, 235, 0.2);\",\r\n      marginBottom: \"10px\",\r\n    },\r\n  })\r\n);\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useMessageStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    messageText: {\r\n      padding: \"10px\",\r\n      borderRadius: \"15px\",\r\n      backgroundColor: \"rgba(201,247,111, 0.8)\",\r\n      fontFamily: \"'Work Sans', sans-serif;\",\r\n      fontWeight: 200,\r\n      wordWrap: \"break-word\",\r\n      maxWidth: \"300px\",\r\n      cursor: \"pointer\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        maxWidth: \"200px\",\r\n      },\r\n    },\r\n    selfMessageText: {\r\n      backgroundColor: \"rgba(92,204,204, 0.8);\",\r\n    },\r\n    emoji: {\r\n      fontFamily: \"'Work Sans', sans-serif;\",\r\n      position: \"absolute\",\r\n      top: \"7px\",\r\n      right: \"-10px\",\r\n      backgroundColor: \"rgba(2,0,36,0.4);\",\r\n      color: theme.palette.text.primary,\r\n      borderRadius: \"20px\",\r\n      padding: \" 0 6px 0\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n    emojiRight: {\r\n      position: \"absolute\",\r\n      top: \"10px\",\r\n      left: \"-10px\",\r\n      backgroundColor: \"rgba(2,0,36,0.4);\",\r\n      color: theme.palette.text.primary,\r\n      borderRadius: \"20px\",\r\n      padding: \" 0 2px 0\",\r\n      fontSize: \"0.8rem\",\r\n    },\r\n    reactionsBox: {\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      maxWidth: \"100px\",\r\n      padding: \"5px\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      cursor: \"pointer\",\r\n      backgroundColor: \"rgb(255, 228, 196);\",\r\n      // height: \"200px\",\r\n    },\r\n    messageBox: {\r\n      paddingTop: \"15px\",\r\n      position: \"relative\",\r\n    },\r\n    reaction: {\r\n      transition: \"all .2s ease\",\r\n      \"&:hover\": {\r\n        transform: \"scale(1.2);\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useUsersListStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    userInfo: {\r\n      maxWidth: \"120px\",\r\n      whiteSpace: \"nowrap\",\r\n      textOverflow: \"ellipsis\",\r\n      overflow: \"hidden\",\r\n    },\r\n    usersMarkup: {\r\n      padding: 10,\r\n    },\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    chatSection: {\r\n      width: \"100%\",\r\n      height: \"80vh\",\r\n    },\r\n    headBG: {\r\n      backgroundColor: \"#e0e0e0\",\r\n    },\r\n    borderRight500: {\r\n      borderRight: \"1px solid #e0e0e0\",\r\n    },\r\n    latestMessageTimeBox: {\r\n      alignSelf: \"flex-start\",\r\n      textAlign: \"end\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    onlineIcon: {\r\n      width: \"12px\",\r\n      height: \"12px\",\r\n      right: \"12px\",\r\n      background:\r\n        \"linear-gradient(0deg, rgba(59,195,34,1) 0%, rgba(45,178,253,1) 100%);\",\r\n      position: \"absolute\",\r\n      borderRadius: \"50%\",\r\n    },\r\n    avatar: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    searchUserInput: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n      padding: \"10px\",\r\n    },\r\n    authUser: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    authUserContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    lastMessage: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    listItem: {\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    },\r\n    messageArea: {\r\n      height: \"70vh\",\r\n      overflowY: \"auto\",\r\n    },\r\n    usersList: {\r\n      height: \"400px\",\r\n      overflowY: \"scroll\",\r\n      \"&::-webkit-scrollbar\": {\r\n        width: \"5px\",\r\n      },\r\n      \"&::-webkit-scrollbar-track\": {\r\n        backgroundColor: \"transparent\",\r\n        borderRadius: \"10px\",\r\n      },\r\n      \"&::-webkit-scrollbar-thumb\": {\r\n        borderRadius: \"10px\",\r\n        visibility: \"hidden;\",\r\n        background–°olor: \"rgba(73, 43, 107, 0.952);\",\r\n      },\r\n      \"&:hover::-webkit-scrollbar-thumb\": {\r\n        visibility: \"visible;\",\r\n        transition: \"all 0.2s ease;\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Grid } from \"@material-ui/core/\";\r\nimport { useLoyoutStyles } from \"./styles\";\r\n\r\nconst Loyout: React.FC = ({ children }) => {\r\n  const styles = useLoyoutStyles();\r\n  return (\r\n    <Grid container className={styles.root}>\r\n      <Grid container item className={styles.container}>\r\n        {children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Loyout;\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/rootReducer\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { useUsersListStyles } from \"./styles\";\r\nimport moment from \"moment\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../customHooks/useTypedSelector\";\r\nimport { setUsers, setSelectedUser } from \"../redux/Users/users.actions\";\r\n\r\nimport { GetUsersData, User } from \"../types/components/UsersList\";\r\n\r\nconst GET_USERS = gql`\r\n  query getUsers {\r\n    getUsers {\r\n      username\r\n      createdAt\r\n      imageUrl\r\n      latestMessage {\r\n        uuid\r\n        from\r\n        to\r\n        content\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst mapState = (state: any) => ({\r\n  user: state.authData.user,\r\n  users: state.usersData.users,\r\n});\r\n\r\nconst UsersList: React.FC = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]);\r\n  const { user, users } = useTypedSelector(mapState);\r\n  const classes = useUsersListStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedUser = users?.find((u: User) => u.selected === true)?.username;\r\n\r\n  const { loading } = useQuery<GetUsersData>(GET_USERS, {\r\n    onCompleted: (data) => {\r\n      setFilteredUsers(data.getUsers);\r\n      dispatch(setUsers(data.getUsers));\r\n    },\r\n    onError: (err) => console.log(err),\r\n  });\r\n\r\n  useEffect(() => {\r\n    let newUsers;\r\n    newUsers = users?.filter((user: User) => {\r\n      return user.username.startsWith(value.toLowerCase());\r\n    });\r\n\r\n    setFilteredUsers(newUsers);\r\n  }, [value]);\r\n\r\n  let usersMarkup;\r\n  if (!filteredUsers || loading) {\r\n    usersMarkup = (\r\n      <Typography variant=\"body2\" className={classes.usersMarkup}>\r\n        Loading..\r\n      </Typography>\r\n    );\r\n  } else if (filteredUsers.length === 0) {\r\n    usersMarkup = (\r\n      <Typography variant=\"body2\" className={classes.usersMarkup}>\r\n        No users\r\n      </Typography>\r\n    );\r\n  } else if (filteredUsers.length > 0) {\r\n    usersMarkup = filteredUsers.map((user) => {\r\n      const selected = selectedUser === user.username;\r\n      return (\r\n        <ListItem\r\n          className={classes.listItem}\r\n          alignItems=\"center\"\r\n          button\r\n          key={user.username}\r\n          onClick={() => dispatch(setSelectedUser(user.username))}\r\n          selected={selected}\r\n        >\r\n          <ListItemIcon className={classes.avatar}>\r\n            <Avatar\r\n              alt={user.username}\r\n              src={\r\n                user.imageUrl ||\r\n                \"https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y\"\r\n              }\r\n            />\r\n            <div className={classes.onlineIcon}></div>\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            className={classes.userInfo}\r\n            primary={user.username}\r\n            secondary={\r\n              <Typography\r\n                className={classes.lastMessage}\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n              >\r\n                {user.latestMessage\r\n                  ? user.latestMessage.content\r\n                  : \"You are connected!\"}\r\n              </Typography>\r\n            }\r\n          />\r\n\r\n          <ListItemText\r\n            className={classes.latestMessageTimeBox}\r\n            secondary={moment(user.latestMessage?.createdAt).format(\"h:mm a\")}\r\n          />\r\n        </ListItem>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        <ListItem key=\"user\" className={classes.authUserContainer}>\r\n          <ListItemIcon>\r\n            <Avatar\r\n              alt=\"user\"\r\n              src=\"https://bain.design/wp-content/uploads/2013/03/People-Avatar-Set-Rectangular-18.jpg\"\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            className={classes.authUser}\r\n            primary={user.username}\r\n          ></ListItemText>\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Grid item xs={12} className={classes.searchUserInput}>\r\n        <TextField\r\n          value={value}\r\n          onChange={({ target }) => setValue(target.value)}\r\n          id=\"outlined-basic-email\"\r\n          label=\"Search\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Divider />\r\n      <List className={classes.usersList}>{usersMarkup}</List>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import { Login } from \"../Pages/SignIn\";\r\n\r\nexport enum authTypes {\r\n  LOGIN = \"LOGIN\",\r\n  LOGOUT = \"LOGOUT\",\r\n}\r\n\r\nexport interface loginInterface {\r\n  type: authTypes.LOGIN;\r\n  payload: Login;\r\n}\r\n\r\nexport interface logoutInterface {\r\n  type: authTypes.LOGOUT;\r\n  payload?: any;\r\n}\r\n\r\nexport type AuthActions = loginInterface | logoutInterface;\r\n","import { userTypes } from \"../../types/redux/User\";\r\nimport {\r\n  setUsersInterface,\r\n  setUserMessagesInterface,\r\n  addMessageInterface,\r\n  addReactionInterface,\r\n  setSelectedUserInterface,\r\n} from \"../../types/redux/User\";\r\nimport {\r\n  setUserMessagesPayload,\r\n  addMessagePayload,\r\n  addReactionPayload,\r\n} from \"../../types/redux/User\";\r\n\r\nexport const setUsers = (users: any): setUsersInterface => ({\r\n  type: userTypes.SET_USERS,\r\n  payload: users,\r\n});\r\n\r\nexport const setUserMessages = (\r\n  payload: setUserMessagesPayload\r\n): setUserMessagesInterface => ({\r\n  type: userTypes.SET_USER_MESSAGES,\r\n  payload: payload,\r\n});\r\n\r\nexport const setSelectedUser = (payload: string): setSelectedUserInterface => ({\r\n  type: userTypes.SET_SELECTED_USER,\r\n  payload: payload,\r\n});\r\n\r\nexport const addMessage = (\r\n  payload: addMessagePayload\r\n): addMessageInterface => ({\r\n  type: userTypes.ADD_MESSAGE,\r\n  payload: payload,\r\n});\r\n\r\nexport const addReaction = (\r\n  payload: addReactionPayload\r\n): addReactionInterface => ({\r\n  type: userTypes.ADD_REACTION,\r\n  payload: payload,\r\n});\r\n","import { loginInterface, logoutInterface } from \"./../../types/redux/Auth\";\r\nimport { authTypes } from \"../../types/redux/Auth\";\r\nimport { Login } from \"../../types/Pages/SignIn\";\r\n\r\nexport const login = (userCredentials: Login): loginInterface => ({\r\n  type: authTypes.LOGIN,\r\n  payload: userCredentials,\r\n});\r\n\r\nexport const logout = (): logoutInterface => ({\r\n  type: authTypes.LOGOUT,\r\n});\r\n","export const reactions = [\"‚ù§Ô∏è\", \"üòÜ\", \"üòØ\", \"üò¢\", \"üò°\", \"üëç\", \"üëé\", \"üòé\"];\r\n","import React, { useState, MouseEvent, ReactNode } from \"react\";\r\nimport { Popover } from \"@material-ui/core\";\r\n\r\nexport function usePopover() {\r\n  const [anchorEl, setAnchorEl] = useState<any | null>(null);\r\n  const handleClick = (event: MouseEvent) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return [anchorEl, setAnchorEl, handleClick, handleClose, open, id];\r\n}\r\n\r\nexport default usePopover;\r\n","import React from \"react\";\r\nimport { Avatar, Box, Typography, Popover } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useMessageStyles } from \"./styles\";\r\n\r\nimport { reactions } from \"../helpers/ReactionList\";\r\nimport { usePopover } from \"../customHooks/usePopover\";\r\nimport { useTypedSelector } from \"../customHooks/useTypedSelector\";\r\nimport { Message as MessageType } from \"../types/Pages/Home\";\r\n\r\nconst mapState = (state: any) => ({\r\n  user: state.authData.user,\r\n});\r\n\r\nconst REACT_TO_MESSAGE = gql`\r\n  mutation reactToMessage($uuid: String!, $content: String!) {\r\n    reactToMessage(uuid: $uuid, content: $content) {\r\n      uuid\r\n    }\r\n  }\r\n`;\r\n\r\ninterface MessageInterface {\r\n  message: MessageType;\r\n  image: string;\r\n}\r\n\r\nconst Message: React.FC<MessageInterface> = ({ message, image }) => {\r\n  const { user } = useTypedSelector(mapState);\r\n  const styles = useMessageStyles();\r\n\r\n  const [\r\n    anchorEl,\r\n    setAnchorEl,\r\n    handleClick,\r\n    handleClose,\r\n    open,\r\n    id,\r\n  ] = usePopover();\r\n\r\n  const sent = message.from === user.username;\r\n  const received = !sent;\r\n  const reactionIcons = Array.from(\r\n    new Set(message?.reactions?.map((r) => r.content))\r\n  );\r\n\r\n  const [reactToMessage] = useMutation(REACT_TO_MESSAGE, {\r\n    onError: (err) => console.log(err),\r\n    onCompleted: () => setAnchorEl(false),\r\n  });\r\n\r\n  const onReact = (reaction: string) => {\r\n    reactToMessage({ variables: { uuid: message.uuid, content: reaction } });\r\n  };\r\n\r\n  return (\r\n    <Box alignSelf={received ? \"flex-start\" : \"flex-end\"} display=\"flex\">\r\n      {received && (\r\n        <Avatar\r\n          style={{ marginRight: \"7px\" }}\r\n          alt={message.from}\r\n          src={image ? image : \"U\"}\r\n        />\r\n      )}\r\n      <Box className={styles.messageBox}>\r\n        <Box\r\n          className={`${styles.messageText} ${\r\n            sent ? styles.selfMessageText : null\r\n          }`}\r\n          onClick={handleClick}\r\n        >\r\n          {message.content}\r\n        </Box>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Box className={styles.reactionsBox}>\r\n            {reactions.map((reaction) => (\r\n              <b\r\n                key={reaction}\r\n                className={styles.reaction}\r\n                onClick={() => onReact(reaction)}\r\n              >\r\n                {reaction}\r\n              </b>\r\n            ))}\r\n          </Box>\r\n        </Popover>\r\n\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          align={received ? \"right\" : \"left\"}\r\n        >\r\n          {moment(message.createdAt).format(\"MMM DD @ h:mm a\")}\r\n        </Typography>\r\n\r\n        {message?.reactions?.length !== 0 && (\r\n          <Box className={received ? styles.emoji : styles.emojiRight}>\r\n            {reactionIcons} {message?.reactions?.length}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect } from \"react\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Box } from \"@material-ui/core/\";\r\nimport { useAlertStyles } from \"./styles\";\r\n\r\nfunction Alert({ message, setErrors, expiresIn }: any) {\r\n  const styles = useAlertStyles();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setErrors(\"\");\r\n    }, expiresIn);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [message]);\r\n\r\n  return (\r\n    <Box className={styles.container}>\r\n      <MuiAlert elevation={6} variant=\"filled\" severity=\"warning\">\r\n        {message}\r\n      </MuiAlert>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Input,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Avatar,\r\n  ListItemText,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core/\";\r\nimport { logout } from \"../redux/Auth/auth.actions\";\r\nimport ExitToAppTwoToneIcon from \"@material-ui/icons/ExitToAppTwoTone\";\r\nimport MailOutlineOutlinedIcon from \"@material-ui/icons/MailOutlineOutlined\";\r\nimport { gql, useLazyQuery, useMutation } from \"@apollo/client\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport Message from \"./Message\";\r\nimport { useMessagesStyles } from \"./styles\";\r\nimport { setUserMessages } from \"../redux/Users/users.actions\";\r\nimport Alert from \"./Alert\";\r\n\r\nimport { useTypedSelector } from \"../customHooks/useTypedSelector\";\r\nimport { UsersState } from \"../types/Redux/User\";\r\nimport { User } from \"../types/components/UsersList\";\r\nimport { Message as MessageType } from \"../types/Pages/Home\";\r\n\r\nconst mapState = (state: any) => ({\r\n  users: state.usersData.users,\r\n});\r\n\r\nconst SEND_MESSAGE = gql`\r\n  mutation sendMessage($to: String!, $content: String!) {\r\n    sendMessage(to: $to, content: $content) {\r\n      uuid\r\n      from\r\n      to\r\n      content\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_MESSAGES = gql`\r\n  query getMessages($from: String!) {\r\n    getMessages(from: $from) {\r\n      uuid\r\n      from\r\n      to\r\n      content\r\n      createdAt\r\n      reactions {\r\n        uuid\r\n        content\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Error {\r\n  message?: string;\r\n}\r\n\r\nfunction Messages() {\r\n  const dispatch = useDispatch();\r\n  const [content, setContent] = useState(\"\");\r\n  const [errors, setErrors] = useState<Error>();\r\n  const styles = useMessagesStyles();\r\n\r\n  const { users } = useTypedSelector<UsersState>(mapState);\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  const selectedUser = users?.find((u: User) => u.selected === true);\r\n  const messages = selectedUser?.messages;\r\n\r\n  const [\r\n    getMessages,\r\n    { loading: messagesLoading, data: messagesData },\r\n  ] = useLazyQuery(GET_MESSAGES);\r\n\r\n  const [sendMessage] = useMutation(SEND_MESSAGE, {\r\n    onError: (err) => setErrors(err),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedUser && !selectedUser.messages) {\r\n      getMessages({ variables: { from: selectedUser.username } });\r\n    }\r\n  }, [selectedUser]);\r\n\r\n  useEffect(() => {\r\n    if (messagesData) {\r\n      dispatch(\r\n        setUserMessages({\r\n          username: selectedUser?.username,\r\n          messages: messagesData.getMessages,\r\n        })\r\n      );\r\n    }\r\n  }, [messagesData]);\r\n\r\n  const submitMessage = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (content.trim() === \"\" || !selectedUser) return;\r\n    if (content.length)\r\n      sendMessage({ variables: { to: selectedUser.username, content } });\r\n    setContent(\"\");\r\n  };\r\n\r\n  let selectedChatMarkup;\r\n  if (!messages && !messagesLoading) {\r\n    selectedChatMarkup = (\r\n      <Typography variant=\"overline\">Select a friend</Typography>\r\n    );\r\n  } else if (messagesLoading) {\r\n    selectedChatMarkup = <Typography variant=\"overline\">Loading..</Typography>;\r\n  } else if (messages?.length !== 0) {\r\n    selectedChatMarkup = messages?.map((message: MessageType) => (\r\n      <React.Fragment key={message.uuid}>\r\n        <Message image={selectedUser?.imageUrl} message={message} />\r\n      </React.Fragment>\r\n    ));\r\n  } else if (messages?.length === 0) {\r\n    selectedChatMarkup = (\r\n      <Typography variant=\"overline\">\r\n        You are now connected! send your first message!\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box className={styles.container}>\r\n      <Box>\r\n        <List>\r\n          <ListItem key=\"RemySharp\" className={styles.messagesHeader}>\r\n            <ListItemIcon>\r\n              <Avatar\r\n                alt=\"user\"\r\n                src={selectedUser ? selectedUser.imageUrl : \"\"}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              style={{ textTransform: \"uppercase\" }}\r\n              primary={selectedUser ? selectedUser.username : \"\"}\r\n            />\r\n            <ListItemText className={styles.logoutButton}>\r\n              <IconButton onClick={handleLogout}>\r\n                <ExitToAppTwoToneIcon />\r\n              </IconButton>\r\n            </ListItemText>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n      </Box>\r\n      <Box className={styles.main} display=\"flex\" flexDirection=\"column\">\r\n        {selectedChatMarkup}\r\n      </Box>\r\n      <Box className={styles.footer}>\r\n        {errors && (\r\n          <Alert\r\n            message={errors.message}\r\n            setErrors={setErrors}\r\n            expiresIn=\"2000\"\r\n          />\r\n        )}\r\n        <form onSubmit={submitMessage} className={styles.form}>\r\n          <Input\r\n            disableUnderline\r\n            type=\"text\"\r\n            placeholder=\"type your message\"\r\n            className={styles.input}\r\n            value={content}\r\n            onChange={({ target }) => setContent(target.value)}\r\n          />\r\n          <IconButton type=\"submit\" className={styles.button}>\r\n            <MailOutlineOutlinedIcon />\r\n          </IconButton>\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useHomeStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    rightBlock: {},\r\n    content: {\r\n      position: \"relative\",\r\n      zIndex: 2,\r\n      borderRadius: \"20px\",\r\n      justifyContent: \"space-around\",\r\n      background:\r\n        \"linear-gradient(90deg, rgba(2,0,36,1) 20%, rgba(121,9,117,0.40379901960784315) 50%, rgba(0,212,255,0.2) 90%);\",\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        // height: \"100vh\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useRegisterStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      background:\r\n        \"linear-gradient(90deg, rgba(2,0,36,1) 20%, rgba(121,9,117,0.40379901960784315) 50%, rgba(0,212,255,0.2) 90%);\",\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      padding: \"20px\",\r\n    },\r\n    textBlock: {\r\n      position: \"relative\",\r\n      zIndex: 10,\r\n      MaxWidth: \"400px\",\r\n      padding: \"10px\",\r\n      alignSelf: \"center\",\r\n      marginLeft: \"15px\",\r\n      marginTop: \"80px\",\r\n    },\r\n    title: {\r\n      fontFamily: \"'Space Grotesk', sans-serif;\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    rightColumn: {\r\n      background: \"url('./happyf.jpg') no-repeat center ;\",\r\n      backgroundSize: \" cover;\",\r\n      position: \"relative\",\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        content: \"''\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        background:\r\n          \"linear-gradient(0deg, rgba(34,89,195,0.4) 0%, rgba(16,222,255,0.4) 100%);\",\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import { makeStyles, createStyles } from \"@material-ui/core/styles\";\r\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const useSignInStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      height: \"450px\",\r\n      background:\r\n        \"linear-gradient(90deg, rgba(2,0,36,1) 20%, rgba(121,9,117,0.40379901960784315) 50%, rgba(0,212,255,0.2) 90%);\",\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      padding: \"20px\",\r\n    },\r\n    textBlock: {\r\n      position: \"relative\",\r\n      zIndex: 10,\r\n      MaxWidth: \"400px\",\r\n      padding: \"10px\",\r\n      alignSelf: \"center\",\r\n      marginLeft: \"15px\",\r\n      marginTop: \"80px\",\r\n    },\r\n    title: {\r\n      fontFamily: \"'Space Grotesk', sans-serif;\",\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\", // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n    rightColumn: {\r\n      background: \"url('./girl.jpg') no-repeat center ;\",\r\n      backgroundSize: \" cover;\",\r\n      position: \"relative\",\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        content: \"''\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        background:\r\n          \"linear-gradient(0deg, rgba(34,89,195,0.4) 0%, rgba(16,222,255,0.4) 100%);\",\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  })\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core/\";\r\nimport { gql, useSubscription } from \"@apollo/client\";\r\n\r\nimport Loyout from \"../components/Loyout\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport Messages from \"../components/Messages\";\r\nimport { useHomeStyles } from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addMessage, addReaction } from \"../redux/Users/users.actions\";\r\nimport { useTypedSelector } from \"../customHooks/useTypedSelector\";\r\n\r\nimport { NewMessage, NewReaction } from \"../types/Pages/Home\";\r\n\r\nconst NEW_MESSAGE = gql`\r\n  subscription newMessage {\r\n    newMessage {\r\n      uuid\r\n      from\r\n      to\r\n      content\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst NEW_REACTION = gql`\r\n  subscription newReaction {\r\n    newReaction {\r\n      uuid\r\n      content\r\n      message {\r\n        uuid\r\n        from\r\n        to\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst mapState = (state: any) => ({ user: state.authData.user });\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const styles = useHomeStyles();\r\n  const { user } = useTypedSelector(mapState);\r\n\r\n  const {\r\n    data: messageData,\r\n    error: messageError,\r\n  } = useSubscription<NewMessage>(NEW_MESSAGE);\r\n\r\n  const {\r\n    data: reactionData,\r\n    error: reactionError,\r\n  } = useSubscription<NewReaction>(NEW_REACTION);\r\n\r\n  useEffect(() => {\r\n    if (messageError) console.log(messageError);\r\n\r\n    if (messageData) {\r\n      const message = messageData.newMessage;\r\n      console.log(message);\r\n      const otherUser =\r\n        user.username === message.to ? message.from : message.to;\r\n\r\n      dispatch(addMessage({ username: otherUser, message }));\r\n    }\r\n  }, [messageError, messageData]);\r\n\r\n  useEffect(() => {\r\n    if (reactionError) console.log(reactionError);\r\n\r\n    if (reactionData) {\r\n      const reaction = reactionData.newReaction;\r\n      const otherUser =\r\n        user.username === reaction.message.to\r\n          ? reaction.message.from\r\n          : reaction.message.to;\r\n\r\n      dispatch(addReaction({ username: otherUser, reaction }));\r\n    }\r\n  }, [reactionError, reactionData]);\r\n\r\n  return (\r\n    <Loyout>\r\n      <Grid className={styles.content} container item sm={12} md={10} lg={8}>\r\n        <Grid item xs={3} sm={4} md={4}>\r\n          <UsersList />\r\n        </Grid>\r\n        <Grid item xs={8} className={styles.rightBlock}>\r\n          <Messages />\r\n        </Grid>\r\n      </Grid>\r\n    </Loyout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, FormEvent } from \"react\";\r\nimport { Grid, TextField, Button, Typography } from \"@material-ui/core\";\r\nimport { gql, useMutation, ApolloError } from \"@apollo/client\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport Loyout from \"../components/Loyout\";\r\nimport { useRegisterStyles } from \"./styles\";\r\nimport { userCredentials } from \"../types/Pages/Register\";\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n  ) {\r\n    register(\r\n      username: $username\r\n      email: $email\r\n      password: $password\r\n      confirmPassword: $confirmPassword\r\n    ) {\r\n      username\r\n      email\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst Register: React.FC<RouteComponentProps> = ({ history }) => {\r\n  const classes = useRegisterStyles();\r\n  const [variables, setVariables] = useState({\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState<any | null>({});\r\n\r\n  const [registerUser] = useMutation<userCredentials>(REGISTER_USER, {\r\n    update: (_, __) => history.push(\"/login\"),\r\n    onError: (err: ApolloError | any) =>\r\n      setErrors(err.graphQLErrors[0].extensions.errors),\r\n  });\r\n\r\n  const submitRegisterForm = (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    registerUser({ variables });\r\n  };\r\n\r\n  return (\r\n    <Loyout>\r\n      <Grid xs={11} md={8} className={classes.root}>\r\n        <Grid item xs={12} sm={6} md={6} lg={6}>\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={submitRegisterForm}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={variables.email}\r\n                    onChange={(e) =>\r\n                      setVariables({ ...variables, email: e.target.value })\r\n                    }\r\n                    error={errors.email}\r\n                    helperText={errors.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    id=\"username\"\r\n                    value={variables.username}\r\n                    onChange={(e) =>\r\n                      setVariables({ ...variables, username: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"password\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    autoFocus\r\n                    value={variables.password}\r\n                    onChange={(e) =>\r\n                      setVariables({ ...variables, password: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"ConfirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    name=\"ConfirmPassword\"\r\n                    value={variables.confirmPassword}\r\n                    onChange={(e) =>\r\n                      setVariables({\r\n                        ...variables,\r\n                        confirmPassword: e.target.value,\r\n                      })\r\n                    }\r\n                    error={errors.confirmPassword}\r\n                    helperText={errors.confirmPassword}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Link to=\"./login\" color=\"white\">\r\n                    <Typography variant=\"overline\" color=\"textSecondary\">\r\n                      Already have an account? Sign in\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={6} className={classes.rightColumn}>\r\n          <Grid item className={classes.textBlock}>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              InContact Messenger\r\n            </Typography>\r\n            <Typography>be in contact with important people for you</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Loyout>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, FormEvent } from \"react\";\r\nimport { Grid, TextField, Button, Typography } from \"@material-ui/core\";\r\nimport { gql, useLazyQuery, ApolloError } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loyout from \"../components/Loyout\";\r\nimport { useSignInStyles } from \"./styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../redux/Auth/auth.actions\";\r\nimport { LoginData, LoginVars } from \"../types/Pages/SignIn\";\r\n\r\nconst LOGIN_USER = gql`\r\n  query login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      username\r\n      email\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst SignIn: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [errors, setErrors] = useState<ApolloError | any>({});\r\n  const [variables, setVariables] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const classes = useSignInStyles();\r\n\r\n  const [loginUser, { loading }] = useLazyQuery<LoginData, LoginVars>(\r\n    LOGIN_USER,\r\n    {\r\n      onError: (err: ApolloError | any) =>\r\n        setErrors(err.graphQLErrors[0].extensions.errors),\r\n\r\n      onCompleted(data) {\r\n        dispatch(login(data.login));\r\n      },\r\n    }\r\n  );\r\n\r\n  const submitLoginForm = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    loginUser({ variables });\r\n  };\r\n\r\n  return (\r\n    <Loyout>\r\n      <Grid xs={10} className={classes.root}>\r\n        <Grid item xs={12} sm={6} md={6} lg={6}>\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign In\r\n            </Typography>\r\n            <form\r\n              className={classes.form}\r\n              noValidate\r\n              onSubmit={submitLoginForm}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Username\"\r\n                    name=\"Username\"\r\n                    value={variables.username}\r\n                    onChange={(e) =>\r\n                      setVariables({ ...variables, username: e.target.value })\r\n                    }\r\n                    error={!!errors.username}\r\n                    helperText={errors.username && errors.username}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    value={variables.password}\r\n                    onChange={(e) =>\r\n                      setVariables({ ...variables, password: e.target.value })\r\n                    }\r\n                    error={!!errors.password}\r\n                    helperText={errors.password && errors.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"loading..\" : \"Sign In\"}\r\n              </Button>\r\n              <Grid container justify=\"center\">\r\n                <Grid item>\r\n                  <Link to=\"./register\">\r\n                    <Typography variant=\"overline\" color=\"textSecondary\">\r\n                      Don't have an account? Sign Up\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n        <Grid container item xs={6} className={classes.rightColumn}>\r\n          <Grid item className={classes.textBlock}>\r\n            <Typography variant=\"h4\" className={classes.title}>\r\n              Let's Talk Messenger\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              be in contact with important people for you\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Loyout>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider as Provider,\r\n  createHttpLink,\r\n  split,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\nimport { getMainDefinition } from \"@apollo/client/utilities\";\r\n\r\nlet httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nhttpLink = authLink.concat(httpLink);\r\n\r\nconst host = window.location.host;\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://${host}/graphql/`,\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  },\r\n});\r\n\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === \"OperationDefinition\" &&\r\n      definition.operation === \"subscription\"\r\n    );\r\n  },\r\n  wsLink,\r\n  httpLink\r\n);\r\n\r\nconst client = new ApolloClient({\r\n  link: splitLink,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default function ApolloProvider(props: any) {\r\n  return <Provider client={client} {...props} />;\r\n}\r\n","import React, { ComponentType } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useTypedSelector } from \"../customHooks/useTypedSelector\";\r\n\r\nconst mapState = (state: any) => ({\r\n  user: state.authData.user,\r\n});\r\n\r\ninterface Props {\r\n  exact?: boolean;\r\n  authenticated?: boolean;\r\n  guest?: boolean;\r\n  path: string;\r\n  currentComponent: ComponentType<any>;\r\n}\r\n\r\nconst DynamicRoute: React.FC<Props> = (props) => {\r\n  const { user } = useTypedSelector(mapState);\r\n\r\n  if (props.authenticated && !user) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else if (props.guest && user) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return <Route component={props.currentComponent} {...props} />;\r\n  }\r\n};\r\n\r\nexport default DynamicRoute;\r\n","import { AuthActions } from \"./../../types/redux/Auth\";\r\nimport { authTypes } from \"../../types/redux/Auth\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\ninterface MyToken {\r\n  name: string;\r\n  exp: number;\r\n  user: any;\r\n}\r\n\r\nlet user: MyToken | null = null;\r\nconst token = localStorage.getItem(\"token\");\r\nif (token) {\r\n  const decodedToken = jwtDecode<MyToken>(token);\r\n  const expiresAt = new Date(decodedToken.exp * 1000);\r\n\r\n  if (new Date() > expiresAt) {\r\n    localStorage.removeItem(\"token\");\r\n  } else {\r\n    user = decodedToken;\r\n  }\r\n} else console.log(\"No token found\");\r\n\r\nconst INITIAL_STATE = {\r\n  user,\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action: AuthActions) => {\r\n  switch (action.type) {\r\n    case authTypes.LOGIN:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case authTypes.LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { userTypes } from \"../../types/redux/User\";\r\nimport { UsersState } from \"../../types/redux/User\";\r\nimport { UserActions } from \"../../types/redux/User\";\r\n\r\nconst INITIAL_STATE: UsersState = {\r\n  users: [],\r\n};\r\n\r\nconst usersReducer = (\r\n  state = INITIAL_STATE,\r\n  action: UserActions\r\n): UsersState => {\r\n  let usersCopy, userIndex;\r\n\r\n  switch (action.type) {\r\n    case userTypes.SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case userTypes.SET_USER_MESSAGES:\r\n      const { username, messages } = action.payload;\r\n\r\n      usersCopy = [...state.users];\r\n\r\n      userIndex = usersCopy.findIndex((u) => u.username === username);\r\n\r\n      usersCopy[userIndex] = { ...usersCopy[userIndex], messages };\r\n\r\n      return {\r\n        ...state,\r\n        users: usersCopy,\r\n      };\r\n\r\n    case userTypes.SET_SELECTED_USER:\r\n      usersCopy = [...state.users];\r\n\r\n      usersCopy = usersCopy.map((user) => ({\r\n        ...user,\r\n        selected: user.username === action.payload,\r\n      }));\r\n\r\n      return {\r\n        ...state,\r\n        users: usersCopy,\r\n      };\r\n\r\n    case userTypes.ADD_MESSAGE:\r\n      let { message } = action.payload;\r\n\r\n      usersCopy = [...state.users];\r\n\r\n      userIndex = usersCopy.findIndex(\r\n        (u) => u.username === action.payload.username\r\n      );\r\n\r\n      message.reactions = [];\r\n      const newUser = {\r\n        ...usersCopy[userIndex],\r\n        messages: usersCopy[userIndex].messages\r\n          ? [message, ...usersCopy[userIndex].messages]\r\n          : null,\r\n        latestMessage: message,\r\n      };\r\n\r\n      usersCopy[userIndex] = newUser;\r\n\r\n      return {\r\n        ...state,\r\n        users: usersCopy,\r\n      };\r\n\r\n    case userTypes.ADD_REACTION:\r\n      let { reaction } = action.payload;\r\n      usersCopy = [...state.users];\r\n\r\n      userIndex = usersCopy.findIndex(\r\n        (u) => u.username === action.payload.username\r\n      );\r\n\r\n      let userCopy = { ...usersCopy[userIndex] };\r\n\r\n      let messageIndex = userCopy.messages.findIndex(\r\n        (m: any) => m.uuid === reaction.message.uuid\r\n      );\r\n\r\n      if (messageIndex > -1) {\r\n        let messagesCopy = [...userCopy.messages];\r\n\r\n        let reactionsCopy = [...messagesCopy[messageIndex].reactions];\r\n\r\n        let reactionIndex = reactionsCopy.findIndex(\r\n          (r) => r.uuid === reaction.uuid\r\n        );\r\n        if (reactionIndex > -1) {\r\n          reactionsCopy[reactionIndex] = reaction;\r\n        } else {\r\n          reactionsCopy = [...reactionsCopy, reaction];\r\n        }\r\n\r\n        messagesCopy[messageIndex] = {\r\n          ...messagesCopy[messageIndex],\r\n          reactions: reactionsCopy,\r\n        };\r\n\r\n        userCopy = { ...userCopy, messages: messagesCopy };\r\n        usersCopy[userIndex] = userCopy;\r\n\r\n        return {\r\n          ...state,\r\n          users: usersCopy,\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./Auth/auth.reducer\";\r\nimport usersReducer from \"./Users/user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authData: authReducer,\r\n  usersData: usersReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Register from \"./pages/Register\";\r\nimport SignIn from \"./pages/SignIn\";\r\nimport ApolloProvider from \"./ApolloProvider\";\r\nimport DynamicRoute from \"./helpers/DynamicRoute\";\r\nimport store from \"./redux/createStore\";\r\n\r\nconst darkTheme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"'Space Grotesk', sans-serif;\",\r\n  },\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: deepPurple[400],\r\n    },\r\n  },\r\n});\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ApolloProvider>\r\n        <BrowserRouter>\r\n          <ThemeProvider theme={darkTheme}>\r\n            <div className=\"App\">\r\n              <Switch>\r\n                <DynamicRoute\r\n                  exact\r\n                  path=\"/\"\r\n                  currentComponent={Home}\r\n                  authenticated\r\n                />\r\n                <DynamicRoute\r\n                  path=\"/register\"\r\n                  currentComponent={Register}\r\n                  guest\r\n                />\r\n                <DynamicRoute path=\"/login\" currentComponent={SignIn} guest />\r\n              </Switch>\r\n            </div>\r\n          </ThemeProvider>\r\n        </BrowserRouter>\r\n      </ApolloProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}